
import static java.lang.Character.isDigit;
import java.util.ArrayList;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author samanthadennison <your.name your.org>
 */
public class TeamMemberInterface extends javax.swing.JFrame {

    /**
     * Creates new form TeamMemberInterface
     */
    public TeamMemberInterface() {
        initComponents();
        ArrayList<Requests> reqList = RequestData.allRequests();
        updateTable(reqList);
        //selectedLabel.setVisible(false);
        requestIDLabel.setVisible(false);
        fromTextField.setVisible(false);
        fromLabel.setVisible(false);
        toTextField.setVisible(false);
        toLabel.setVisible(false);
        filterButton.setVisible(false);
        ArrayList<String> choices = new ArrayList<String>();
        choices.add("- Select One -");
        subFilterComboBox.setModel(new javax.swing.DefaultComboBoxModel(choices.toArray()));

    }
    
    public static void updateTable(ArrayList<Requests> reqList){
        
        DefaultTableModel requestStatus = (DefaultTableModel) requestTable.getModel();
            requestStatus.setNumRows(0);
            Object[] rowData = new Object[5];
            for (Requests request: reqList){
                rowData[0] = request.getId();
                rowData[1] = request.getApNum(); 
                rowData[2] = request.getArea();
                rowData[3] = request.getCurrentTime();
                rowData[4] = request.getStatus();
                requestStatus.addRow(rowData);
                             
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        requestTable = new javax.swing.JTable();
        selectedLabel = new javax.swing.JLabel();
        requestIDLabel = new javax.swing.JLabel();
        filterByComboBox = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        subFilterComboBox = new javax.swing.JComboBox<>();
        fromLabel = new javax.swing.JLabel();
        toLabel = new javax.swing.JLabel();
        fromTextField = new javax.swing.JTextField();
        toTextField = new javax.swing.JTextField();
        filterButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        teamMemberLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(109, 135, 100));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Apartment Maintenance");

        jPanel4.setBackground(new java.awt.Color(213, 232, 212));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 0));
        jLabel2.setText("All Requests");

        requestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Request ID", "Apartment Number", "Area", "Timestamp", "Status"
            }
        ));
        requestTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selectRequest(evt);
            }
        });
        jScrollPane1.setViewportView(requestTable);

        selectedLabel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        selectedLabel.setText("Selected Request:");

        requestIDLabel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        requestIDLabel.setText("jLabel5");

        filterByComboBox.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        filterByComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Select One -", "Apartment Number", "Area", "Date Range", "Status" }));
        filterByComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterByComboBoxActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel4.setText("Filter By:");

        subFilterComboBox.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        subFilterComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        subFilterComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subFilterComboBoxActionPerformed(evt);
            }
        });

        fromLabel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        fromLabel.setText("From:");

        toLabel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        toLabel.setText("To:");

        fromTextField.setText("MM/DD/YYYY");
        fromTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickFrom(evt);
            }
        });
        fromTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fromTextFieldActionPerformed(evt);
            }
        });

        toTextField.setText("MM/DD/YYYY");
        toTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickTo(evt);
            }
        });

        filterButton.setText("Filter");
        filterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 674, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(selectedLabel)
                        .addGap(18, 18, 18)
                        .addComponent(requestIDLabel)
                        .addGap(27, 27, 27))))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(fromLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(fromTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(toLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(toTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addComponent(filterButton))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(filterByComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(subFilterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(selectedLabel)
                    .addComponent(requestIDLabel))
                .addGap(30, 30, 30)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filterByComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(subFilterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(toLabel)
                    .addComponent(fromTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(toTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fromLabel)
                    .addComponent(filterButton))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Team Member ID:");

        teamMemberLabel.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        teamMemberLabel.setForeground(new java.awt.Color(255, 255, 255));
        teamMemberLabel.setText("Team Member ID:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(teamMemberLabel)
                .addGap(36, 36, 36))
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(teamMemberLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectRequest(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectRequest
        // TODO add your handling code here:
        int row = requestTable.getSelectedRow();
        DefaultTableModel requestStatus = (DefaultTableModel) requestTable.getModel();
        requestIDLabel.setText(requestStatus.getValueAt(row, 0).toString());
        selectedLabel.setVisible(true);
        requestIDLabel.setVisible(true);
        RequestDetails details = new RequestDetails();
        details.setVisible(true);
        ArrayList<Requests> reqList = RequestData.allRequests();
        updateTable(reqList);
        
    }//GEN-LAST:event_selectRequest

    private void filterByComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterByComboBoxActionPerformed
        // TODO add your handling code here:
        boolean valid = true;
        if (String.valueOf(filterByComboBox.getSelectedItem()).equals("Date Range")){
            fromTextField.setVisible(true);
            fromLabel.setVisible(true);
            toTextField.setVisible(true);
            toLabel.setVisible(true);
            subFilterComboBox.setVisible(false);
            filterButton.setVisible(true);
        }
        else if (String.valueOf(filterByComboBox.getSelectedItem()).equals("- Select One -")){
            valid = false;
            ArrayList<String> choices = new ArrayList<String>();
            choices.add("- Select One -");
            subFilterComboBox.setModel(new javax.swing.DefaultComboBoxModel(choices.toArray()));
            
        }
        else{
            fromTextField.setVisible(false);
            fromLabel.setVisible(false);
            toTextField.setVisible(false);
            toLabel.setVisible(false);
            subFilterComboBox.setVisible(true);
            filterButton.setVisible(false);
        }
        if (valid == true){
            ArrayList<String> choices = RequestData.filterChoices(String.valueOf(filterByComboBox.getSelectedItem()));
            subFilterComboBox.setModel(new javax.swing.DefaultComboBoxModel(choices.toArray()));
        }
        

    }//GEN-LAST:event_filterByComboBoxActionPerformed

    private void subFilterComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subFilterComboBoxActionPerformed
        // TODO add your handling code here:
        String choice = String.valueOf(subFilterComboBox.getSelectedItem());
        boolean valid = true;
        if (String.valueOf(subFilterComboBox.getSelectedItem()).equals("- Select One -")){
            valid = false;
        }
        if (valid == true){
            String filter = String.valueOf(filterByComboBox.getSelectedItem());
            ArrayList<Requests> reqList = RequestData.filterRequests(filter, choice);
            updateTable(reqList);
        }
        
    }//GEN-LAST:event_subFilterComboBoxActionPerformed

    private void fromTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fromTextFieldActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_fromTextFieldActionPerformed

    private void filterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterButtonActionPerformed
        // TODO add your handling code here:
        String from = fromTextField.getText();
        String to = toTextField.getText();
        boolean valid = true;
        if (from.length() != 10 && to.length() != 10){
            fromTextField.setText("MM/DD/YYYY");
            toTextField.setText("MM/DD/YYYY");
            valid = false;
        }
        else if (from.length() != 10){
            fromTextField.setText("MM/DD/YYYY");
            valid = false;
        }
        else if (to.length() != 10){
            toTextField.setText("MM/DD/YYYY");
            valid = false;
        }
        else{
            if (from.charAt(2) != '/' || from.charAt(5) != '/'){
                fromTextField.setText("MM/DD/YYYY");
                valid = false;
            }
            if (to.charAt(2) != '/' || to.charAt(5) != '/'){
                toTextField.setText("MM/DD/YYYY");
                valid = false;
            }
            if (!isDigit(from.charAt(0)) || !isDigit(from.charAt(1)) || !isDigit(from.charAt(3)) ||
                    !isDigit(from.charAt(4)) || !isDigit(from.charAt(6)) || !isDigit(from.charAt(7)) ||
                    !isDigit(from.charAt(8)) ||!isDigit(from.charAt(9))){
                fromTextField.setText("MM/DD/YYYY");
                valid = false;
            }
            if (!isDigit(to.charAt(0)) || !isDigit(to.charAt(1)) || !isDigit(to.charAt(3)) ||
                    !isDigit(to.charAt(4)) || !isDigit(to.charAt(6)) || !isDigit(to.charAt(7)) ||
                    !isDigit(to.charAt(8)) ||!isDigit(to.charAt(9))){
                toTextField.setText("MM/DD/YYYY");
                valid = false;
            }
        }
        
        
        
        if (valid == true){
            ArrayList<Requests> reqList = RequestData.dateRangeRequests(from, to);
            updateTable(reqList);
        }
        
    }//GEN-LAST:event_filterButtonActionPerformed

    private void clickFrom(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clickFrom
        // TODO add your handling code here:
        if (fromTextField.getText().equals("MM/DD/YYYY")){
            fromTextField.setText("");
        }
        else if (fromTextField.getText().equals("")){
            fromTextField.setText("MM/DD/YYYY");
        }
        
    }//GEN-LAST:event_clickFrom

    private void clickTo(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clickTo
        // TODO add your handling code here:
        if (toTextField.getText().equals("MM/DD/YYYY")){
            toTextField.setText("");
        }
        else if (toTextField.getText().equals("")){
            toTextField.setText("MM/DD/YYYY");
        }
    }//GEN-LAST:event_clickTo

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TeamMemberInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TeamMemberInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TeamMemberInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TeamMemberInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TeamMemberInterface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton filterButton;
    private javax.swing.JComboBox<String> filterByComboBox;
    private javax.swing.JLabel fromLabel;
    private javax.swing.JTextField fromTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JLabel requestIDLabel;
    public static javax.swing.JTable requestTable;
    private javax.swing.JLabel selectedLabel;
    private javax.swing.JComboBox<String> subFilterComboBox;
    public javax.swing.JLabel teamMemberLabel;
    private javax.swing.JLabel toLabel;
    private javax.swing.JTextField toTextField;
    // End of variables declaration//GEN-END:variables
}
